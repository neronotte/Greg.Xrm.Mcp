#pragma warning disable CS1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Greg.Xrm.Mcp.FormEngineer.Model
{
	
	
	/// <summary>
	/// Status of the view.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.15")]
	public enum userquery_statecode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 0,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 1,
	}
	
	/// <summary>
	/// Reason for the status of the view.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.15")]
	public enum userquery_statuscode
	{
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Active = 1,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		All = 3,
		
		[System.Runtime.Serialization.EnumMemberAttribute()]
		Inactive = 2,
	}
	
	/// <summary>
	/// Saved database query that is owned by a user.
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("userquery")]
	[System.CodeDom.Compiler.GeneratedCodeAttribute("Dataverse Model Builder", "2.0.0.15")]
	public partial class UserQuery : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public UserQuery() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "userquery";
		
		public const string EntityLogicalCollectionName = "userqueries";
		
		public const string EntitySetName = "userqueries";
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// Type the column name that will be used to group the results from the data collected across multiple records from a user view.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("advancedgroupby")]
		public string AdvancedGroupBy
		{
			get
			{
				return this.GetAttributeValue<string>("advancedgroupby");
			}
			set
			{
				this.OnPropertyChanging("AdvancedGroupBy");
				this.SetAttributeValue("advancedgroupby", value);
				this.OnPropertyChanged("AdvancedGroupBy");
			}
		}
		
		/// <summary>
		/// Shows the columns and sorting criteria for the saved view, stored in XML format.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("columnsetxml")]
		public string ColumnSetXml
		{
			get
			{
				return this.GetAttributeValue<string>("columnsetxml");
			}
			set
			{
				this.OnPropertyChanging("ColumnSetXml");
				this.SetAttributeValue("columnsetxml", value);
				this.OnPropertyChanged("ColumnSetXml");
			}
		}
		
		/// <summary>
		/// Type information about how the items in the user view are formatted.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("conditionalformatting")]
		public string ConditionalFormatting
		{
			get
			{
				return this.GetAttributeValue<string>("conditionalformatting");
			}
			set
			{
				this.OnPropertyChanging("ConditionalFormatting");
				this.SetAttributeValue("conditionalformatting", value);
				this.OnPropertyChanged("ConditionalFormatting");
			}
		}
		
		/// <summary>
		/// Shows who created the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdby");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the record was created. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdon")]
		public System.Nullable<System.DateTime> CreatedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("createdon");
			}
		}
		
		/// <summary>
		/// Shows who created the record on behalf of another user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("createdonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference CreatedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("createdonbehalfby");
			}
		}
		
		/// <summary>
		/// Type additional information to describe the saved view, such as the filter criteria or intended results set.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("description")]
		public string Description
		{
			get
			{
				return this.GetAttributeValue<string>("description");
			}
			set
			{
				this.OnPropertyChanging("Description");
				this.SetAttributeValue("description", value);
				this.OnPropertyChanged("Description");
			}
		}
		
		/// <summary>
		/// Tells whether the view can retrieve data from all cluster partitions.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("enablecrosspartition")]
		public System.Nullable<bool> EnableCrossPartition
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<bool>>("enablecrosspartition");
			}
			set
			{
				this.OnPropertyChanging("EnableCrossPartition");
				this.SetAttributeValue("enablecrosspartition", value);
				this.OnPropertyChanged("EnableCrossPartition");
			}
		}
		
		/// <summary>
		/// Contains the Fetch XML query that defines the entities and attributes included in the saved view.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("fetchxml")]
		public string FetchXml
		{
			get
			{
				return this.GetAttributeValue<string>("fetchxml");
			}
			set
			{
				this.OnPropertyChanging("FetchXml");
				this.SetAttributeValue("fetchxml", value);
				this.OnPropertyChanged("FetchXml");
			}
		}
		
		/// <summary>
		/// Layout data in JSON format.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("layoutjson")]
		public string LayoutJson
		{
			get
			{
				return this.GetAttributeValue<string>("layoutjson");
			}
			set
			{
				this.OnPropertyChanging("LayoutJson");
				this.SetAttributeValue("layoutjson", value);
				this.OnPropertyChanged("LayoutJson");
			}
		}
		
		/// <summary>
		/// For internal use only.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("layoutxml")]
		public string LayoutXml
		{
			get
			{
				return this.GetAttributeValue<string>("layoutxml");
			}
			set
			{
				this.OnPropertyChanging("LayoutXml");
				this.SetAttributeValue("layoutxml", value);
				this.OnPropertyChanged("LayoutXml");
			}
		}
		
		/// <summary>
		/// Shows who last updated the record.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedby");
			}
		}
		
		/// <summary>
		/// Shows the date and time when the record was last updated. The date and time are displayed in the time zone selected in Microsoft Dynamics 365 options.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedon")]
		public System.Nullable<System.DateTime> ModifiedOn
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.DateTime>>("modifiedon");
			}
		}
		
		/// <summary>
		/// Shows who last updated the record on behalf of another user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("modifiedonbehalfby")]
		public Microsoft.Xrm.Sdk.EntityReference ModifiedOnBehalfBy
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("modifiedonbehalfby");
			}
		}
		
		/// <summary>
		/// Type a descriptive name for the saved view.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("name")]
		public string Name
		{
			get
			{
				return this.GetAttributeValue<string>("name");
			}
			set
			{
				this.OnPropertyChanging("Name");
				this.SetAttributeValue("name", value);
				this.OnPropertyChanged("Name");
			}
		}
		
		/// <summary>
		/// String specifying the corresponding sql query for the fetch xml specified for offline use.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("offlinesqlquery")]
		public string OfflineSqlQuery
		{
			get
			{
				return this.GetAttributeValue<string>("offlinesqlquery");
			}
			set
			{
				this.OnPropertyChanging("OfflineSqlQuery");
				this.SetAttributeValue("offlinesqlquery", value);
				this.OnPropertyChanged("OfflineSqlQuery");
			}
		}
		
		/// <summary>
		/// Enter the user or team who is assigned to manage the record. This field is updated every time the record is assigned to a different user.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("ownerid")]
		public Microsoft.Xrm.Sdk.EntityReference OwnerId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("ownerid");
			}
			set
			{
				this.OnPropertyChanging("OwnerId");
				this.SetAttributeValue("ownerid", value);
				this.OnPropertyChanged("OwnerId");
			}
		}
		
		/// <summary>
		/// Shows the business unit that the record owner belongs to.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningbusinessunit")]
		public Microsoft.Xrm.Sdk.EntityReference OwningBusinessUnit
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningbusinessunit");
			}
		}
		
		/// <summary>
		/// Unique identifier of the team who owns this saved view.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owningteam")]
		public Microsoft.Xrm.Sdk.EntityReference OwningTeam
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owningteam");
			}
		}
		
		/// <summary>
		/// Unique identifier of the user who owns this saved view.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("owninguser")]
		public Microsoft.Xrm.Sdk.EntityReference OwningUser
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("owninguser");
			}
		}
		
		/// <summary>
		/// Choose the ID of the saved query that the record was created from.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("parentqueryid")]
		public Microsoft.Xrm.Sdk.EntityReference ParentQueryId
		{
			get
			{
				return this.GetAttributeValue<Microsoft.Xrm.Sdk.EntityReference>("parentqueryid");
			}
			set
			{
				this.OnPropertyChanging("ParentQueryId");
				this.SetAttributeValue("parentqueryid", value);
				this.OnPropertyChanged("ParentQueryId");
			}
		}
		
		/// <summary>
		/// Shows the code for the query type to indicate whether the saved view is an address book filter, advanced search, or other view.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("querytype")]
		public System.Nullable<int> QueryType
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<int>>("querytype");
			}
			set
			{
				this.OnPropertyChanging("QueryType");
				this.SetAttributeValue("querytype", value);
				this.OnPropertyChanged("QueryType");
			}
		}
		
		/// <summary>
		/// Type of entity that the saved view displays.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("returnedtypecode")]
		public string ReturnedTypeCode
		{
			get
			{
				return this.GetAttributeValue<string>("returnedtypecode");
			}
			set
			{
				this.OnPropertyChanging("ReturnedTypeCode");
				this.SetAttributeValue("returnedtypecode", value);
				this.OnPropertyChanged("ReturnedTypeCode");
			}
		}
		
		/// <summary>
		/// Shows whether the saved view is active or inactive.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statecode")]
		public virtual userquery_statecode? StateCode
		{
			get
			{
				return ((userquery_statecode?)(EntityOptionSetEnum.GetEnum(this, "statecode")));
			}
			set
			{
				this.OnPropertyChanging("StateCode");
				this.SetAttributeValue("statecode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("StateCode");
			}
		}
		
		/// <summary>
		/// Select the item's status.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("statuscode")]
		public virtual userquery_statuscode? StatusCode
		{
			get
			{
				return ((userquery_statuscode?)(EntityOptionSetEnum.GetEnum(this, "statuscode")));
			}
			set
			{
				this.OnPropertyChanging("StatusCode");
				this.SetAttributeValue("statuscode", value.HasValue ? new Microsoft.Xrm.Sdk.OptionSetValue((int)value) : null);
				this.OnPropertyChanged("StatusCode");
			}
		}
		
		/// <summary>
		/// Unique identifier of the saved view.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("userqueryid")]
		public System.Nullable<System.Guid> UserQueryId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("userqueryid");
			}
			set
			{
				this.OnPropertyChanging("UserQueryId");
				this.SetAttributeValue("userqueryid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("UserQueryId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("userqueryid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.UserQueryId = value;
			}
		}
		
		/// <summary>
		/// Version number of the saved view.
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
		}
	}
}
#pragma warning restore CS1591
